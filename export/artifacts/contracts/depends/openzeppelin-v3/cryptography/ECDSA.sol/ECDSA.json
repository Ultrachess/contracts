{
  "contractName": "ECDSA",
  "sourceName": "contracts/depends/openzeppelin-v3/cryptography/ECDSA.sol",
  "abi": [],
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208089d3d9d285282c4200e14abd0106d3545e0f267a7c56c51bab30cc564ab30164736f6c63430007060033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208089d3d9d285282c4200e14abd0106d3545e0f267a7c56c51bab30cc564ab30164736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17200",
        "executionCost": "97",
        "totalCost": "17297"
      },
      "internal": {
        "recover(bytes32,bytes memory)": "infinite",
        "recover(bytes32,uint8,bytes32,bytes32)": "infinite",
        "toEthSignedMessageHash(bytes32)": "infinite"
      }
    },
    "methodIdentifiers": {}
  }
}