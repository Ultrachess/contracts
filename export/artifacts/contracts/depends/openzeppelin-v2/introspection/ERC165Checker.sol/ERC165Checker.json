{
  "contractName": "ERC165Checker",
  "sourceName": "contracts/depends/openzeppelin-v2/introspection/ERC165Checker.sol",
  "abi": [],
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582065bd18c2d43ec783fb9497c712cfccdc5337c029ebdee833db4e3ec7bd57053164736f6c63430005110032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582065bd18c2d43ec783fb9497c712cfccdc5337c029ebdee833db4e3ec7bd57053164736f6c63430005110032",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Library used to query support of an interface declared via {IERC165}. * Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17000",
        "executionCost": "94",
        "totalCost": "17094"
      },
      "internal": {
        "_callERC165SupportsInterface(address,bytes4)": "infinite",
        "_supportsAllInterfaces(address,bytes4[] memory)": "infinite",
        "_supportsERC165(address)": "infinite",
        "_supportsERC165Interface(address,bytes4)": "infinite",
        "_supportsInterface(address,bytes4)": "infinite"
      }
    },
    "methodIdentifiers": {}
  }
}