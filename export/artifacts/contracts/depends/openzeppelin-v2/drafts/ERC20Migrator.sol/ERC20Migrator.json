{
  "contractName": "ERC20Migrator",
  "sourceName": "contracts/depends/openzeppelin-v2/drafts/ERC20Migrator.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "legacyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20Mintable",
          "name": "newToken_",
          "type": "address"
        }
      ],
      "name": "beginMigration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "legacyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516108b83803806108b88339818101604052602081101561003357600080fd5b50516001600160a01b03811661007a5760405162461bcd60e51b815260040180806020018281038252602f815260200180610889602f913960400191505060405180910390fd5b600080546001600160a01b039092166001600160a01b03199092169190911790556107df806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063104d26141461005c57806313155455146100845780635a8cadb1146100a8578063ad68ebf7146100ce578063c42bd05a146100fa575b600080fd5b6100826004803603602081101561007257600080fd5b50356001600160a01b0316610102565b005b61008c61025e565b604080516001600160a01b039092168252519081900360200190f35b610082600480360360208110156100be57600080fd5b50356001600160a01b031661026d565b610082600480360360408110156100e457600080fd5b506001600160a01b03813516906020013561038a565b61008c61046f565b6001546001600160a01b03161561014a5760405162461bcd60e51b81526004018080602001828103825260288152602001806106e06028913960400191505060405180910390fd5b6001600160a01b03811661018f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610755602c913960400191505060405180910390fd5b604080516355138f0d60e11b815230600482015290516001600160a01b0383169163aa271e1a916024808301926020929190829003018186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b505050506040513d60208110156101ff57600080fd5b505161023c5760405162461bcd60e51b81526004018080602001828103825260298152602001806107086029913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60008054604080516370a0823160e01b81526001600160a01b038581166004830152915191909216916370a08231916024808301926020929190829003018186803b1580156102bb57600080fd5b505afa1580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50516000805460408051636eb1769f60e11b81526001600160a01b0387811660048301523060248301529151949550929391169163dd62ed3e916044808301926020929190829003018186803b15801561033e57600080fd5b505afa158015610352573d6000803e3d6000fd5b505050506040513d602081101561036857600080fd5b505190506000610378838361047e565b9050610384848261038a565b50505050565b6001546001600160a01b03166103d15760405162461bcd60e51b81526004018080602001828103825260248152602001806107316024913960400191505060405180910390fd5b6000546103ef906001600160a01b031683308463ffffffff61049616565b600154604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050506040513d602081101561038457600080fd5b6001546001600160a01b031690565b600081831061048d578161048f565b825b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103849085906104fd826001600160a01b03166106a3565b61054e576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061058c5780518252601f19909201916020918201910161056d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105ee576040519150601f19603f3d011682016040523d82523d6000602084013e6105f3565b606091505b50915091508161064a576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156103845780806020019051602081101561066657600080fd5b50516103845760405162461bcd60e51b815260040180806020018281038252602a815260200180610781602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106d757508115155b94935050505056fe45524332304d69677261746f723a206d6967726174696f6e20616c7265616479207374617274656445524332304d69677261746f723a206e6f742061206d696e74657220666f72206e657720746f6b656e45524332304d69677261746f723a206d6967726174696f6e206e6f74207374617274656445524332304d69677261746f723a206e657720746f6b656e20697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820b26ea39d5fa1f5c7a3c4b34aedcb62949d17f531209bd848afe5391c815476ac64736f6c6343000511003245524332304d69677261746f723a206c656761637920746f6b656e20697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063104d26141461005c57806313155455146100845780635a8cadb1146100a8578063ad68ebf7146100ce578063c42bd05a146100fa575b600080fd5b6100826004803603602081101561007257600080fd5b50356001600160a01b0316610102565b005b61008c61025e565b604080516001600160a01b039092168252519081900360200190f35b610082600480360360208110156100be57600080fd5b50356001600160a01b031661026d565b610082600480360360408110156100e457600080fd5b506001600160a01b03813516906020013561038a565b61008c61046f565b6001546001600160a01b03161561014a5760405162461bcd60e51b81526004018080602001828103825260288152602001806106e06028913960400191505060405180910390fd5b6001600160a01b03811661018f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610755602c913960400191505060405180910390fd5b604080516355138f0d60e11b815230600482015290516001600160a01b0383169163aa271e1a916024808301926020929190829003018186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b505050506040513d60208110156101ff57600080fd5b505161023c5760405162461bcd60e51b81526004018080602001828103825260298152602001806107086029913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60008054604080516370a0823160e01b81526001600160a01b038581166004830152915191909216916370a08231916024808301926020929190829003018186803b1580156102bb57600080fd5b505afa1580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50516000805460408051636eb1769f60e11b81526001600160a01b0387811660048301523060248301529151949550929391169163dd62ed3e916044808301926020929190829003018186803b15801561033e57600080fd5b505afa158015610352573d6000803e3d6000fd5b505050506040513d602081101561036857600080fd5b505190506000610378838361047e565b9050610384848261038a565b50505050565b6001546001600160a01b03166103d15760405162461bcd60e51b81526004018080602001828103825260248152602001806107316024913960400191505060405180910390fd5b6000546103ef906001600160a01b031683308463ffffffff61049616565b600154604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050506040513d602081101561038457600080fd5b6001546001600160a01b031690565b600081831061048d578161048f565b825b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103849085906104fd826001600160a01b03166106a3565b61054e576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061058c5780518252601f19909201916020918201910161056d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105ee576040519150601f19603f3d011682016040523d82523d6000602084013e6105f3565b606091505b50915091508161064a576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156103845780806020019051602081101561066657600080fd5b50516103845760405162461bcd60e51b815260040180806020018281038252602a815260200180610781602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106d757508115155b94935050505056fe45524332304d69677261746f723a206d6967726174696f6e20616c7265616479207374617274656445524332304d69677261746f723a206e6f742061206d696e74657220666f72206e657720746f6b656e45524332304d69677261746f723a206d6967726174696f6e206e6f74207374617274656445524332304d69677261746f723a206e657720746f6b656e20697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820b26ea39d5fa1f5c7a3c4b34aedcb62949d17f531209bd848afe5391c815476ac64736f6c63430005110032",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "This contract can be used to migrate an ERC20 token from one contract to another, where each token holder has to opt-in to the migration. To opt-in, users must approve for this contract the number of tokens they want to migrate. Once the allowance is set up, anyone can trigger the migration to the new token contract. In this way, token holders \"turn in\" their old balance and will be minted an equal amount in the new token. The new token contract must be mintable. For the precise interface refer to OpenZeppelin's {ERC20Mintable}, but the only functions that are needed are {MinterRole-isMinter} and {ERC20Mintable-mint}. The migrator will check that it is a minter for the token. The balance from the legacy token will be transferred to the migrator, as it is migrated, and remain there forever. Although this contract can be used in many different scenarios, the main motivation was to provide a way to migrate ERC20 tokens into an upgradeable version of it using ZeppelinOS. To read more about how this can be done using this implementation, please follow the official documentation site of ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html * Example of usage: ``` const migrator = await ERC20Migrator.new(legacyToken.address); await newToken.addMinter(migrator.address); await migrator.beginMigration(newToken.address); ```",
    "methods": {
      "beginMigration(address)": {
        "details": "Begins the migration by setting which is the new token that will be minted. This contract must be a minter for the new token.",
        "params": {
          "newToken_": "the token that will be minted"
        }
      },
      "constructor": {
        "params": {
          "legacyToken": "address of the old token contract"
        }
      },
      "legacyToken()": {
        "details": "Returns the legacy token that is being migrated."
      },
      "migrate(address,uint256)": {
        "details": "Transfers part of an account's balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated",
          "amount": "amount of tokens to be migrated"
        }
      },
      "migrateAll(address)": {
        "details": "Transfers all of an account's allowed balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated"
        }
      },
      "newToken()": {
        "details": "Returns the new token to which we are migrating."
      }
    },
    "title": "ERC20Migrator"
  },
  "userdoc": {
    "methods": {}
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "403000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "beginMigration(address)": "infinite",
        "legacyToken()": "1037",
        "migrate(address,uint256)": "infinite",
        "migrateAll(address)": "infinite",
        "newToken()": "1103"
      }
    },
    "methodIdentifiers": {
      "beginMigration(address)": "104d2614",
      "legacyToken()": "13155455",
      "migrate(address,uint256)": "ad68ebf7",
      "migrateAll(address)": "5a8cadb1",
      "newToken()": "c42bd05a"
    }
  }
}