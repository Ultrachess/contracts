{
  "contractName": "SwapRouter",
  "sourceName": "contracts/depends/uniswap-v3-periphery/SwapRouter.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowed",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowedIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "sweepTokenWithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9WithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101025760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb14610284578063e0e189a014610297578063f28c0498146102aa578063f3995c67146102bd578063fa461e33146102d057610172565b8063c04b8d5914610236578063c2e3140a14610249578063c45a01551461025c578063db3e21981461027157610172565b80634aa4a4fc116100d15780634aa4a4fc146101ce5780639b2c0a37146101f0578063a4a78f0c14610203578063ac9650d81461021657610172565b806312210e8a14610177578063414bf3891461017f5780634659a494146101a857806349404b7c146101bb57610172565b3661017257336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610170576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b6101706102f0565b61019261018d36600461228d565b610302565b60405161019f91906125e6565b60405180910390f35b6101706101b636600461200b565b610429565b6101706101c9366004612394565b6104c3565b3480156101da57600080fd5b506101e361063d565b60405161019f9190612483565b6101706101fe3660046123c3565b610661565b61017061021136600461200b565b61082d565b61022961022436600461206b565b6108be565b60405161019f91906124dd565b6101926102443660046121e2565b6109fe565b61017061025736600461200b565b610b12565b34801561026857600080fd5b506101e3610ba1565b61019261027f36600461228d565b610bc5565b610170610292366004611f6c565b610cec565b6101706102a5366004611fad565b610dca565b6101926102b83660046122a9565b610ef1565b6101706102cb36600461200b565b610fe7565b3480156102dc57600080fd5b506101706102eb3660046120fd565b611059565b471561030057610300334761116c565b565b600081608001358061031261125b565b111561035b576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b6103f460a08401356103736080860160608701611f49565b610384610100870160e08801611f49565b604080518082019091528061039c60208a018a611f49565b6103ac60608b0160408c01612371565b6103bc60408c0160208d01611f49565b6040516020016103ce93929190612438565b6040516020818303038152906040528152602001336001600160a01b031681525061125f565b91508260c001358210156104235760405162461bcd60e51b815260040161041a9061257c565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b505050506040513d602081101561055c57600080fd5b50519050828110156105aa576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610638577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b50505050610638828261116c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610672575060648211155b61067b57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d602081101561071457600080fd5b5051905084811015610762576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610826577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b5050505060006127106107fe85846113b190919063ffffffff16565b8161080557fe5b049050801561081857610818838261116c565b6108248582840361116c565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561087e57600080fd5b505afa158015610892573d6000803e3d6000fd5b505050506040513d60208110156108a857600080fd5b5051101561082457610824868686868686610429565b60608167ffffffffffffffff811180156108d757600080fd5b5060405190808252806020026020018201604052801561090b57816020015b60608152602001906001900390816108f65790505b50905060005b828110156109f7576000803086868581811061092957fe5b905060200281019061093b91906125ef565b604051610949929190612473565b600060405180830381855af49150503d8060008114610984576040519150601f19603f3d011682016040523d82523d6000602084013e610989565b606091505b5091509150816109d5576044815110156109a257600080fd5b600481019050808060200190518101906109bc9190612178565b60405162461bcd60e51b815260040161041a919061253d565b808484815181106109e257fe5b60209081029190910101525050600101610911565b5092915050565b6000816040015180610a0e61125b565b1115610a57576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610a6885600001516113db565b9050610ab4856060015182610a81578660200151610a83565b305b60006040518060400160405280610a9d8b600001516113e7565b8152602001876001600160a01b031681525061125f565b60608601528015610ad4578451309250610acd906113f6565b8552610ae1565b8460600151935050610ae7565b50610a59565b8360800151831015610b0b5760405162461bcd60e51b815260040161041a9061257c565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d6020811015610b8b57600080fd5b5051101561082457610824868686868686610fe7565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610bd561125b565b1115610c1e576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610cba60a0840135610c366080860160608701611f49565b610c47610100870160e08801611f49565b6040518060400160405280886020016020810190610c659190611f49565b610c7560608b0160408c01612371565b610c8260208c018c611f49565b604051602001610c9493929190612438565b6040516020818303038152906040528152602001336001600160a01b031681525061140d565b91508260c00135821115610ce05760405162461bcd60e51b815260040161041a90612550565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d3b57600080fd5b505afa158015610d4f573d6000803e3d6000fd5b505050506040513d6020811015610d6557600080fd5b5051905082811015610db3576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610dc457610dc4848383611588565b50505050565b600082118015610ddb575060648211155b610de457600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e3357600080fd5b505afa158015610e47573d6000803e3d6000fd5b505050506040513d6020811015610e5d57600080fd5b5051905084811015610eab576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610824576000612710610ec083866113b1565b81610ec757fe5b0490508015610edb57610edb878483611588565b610ee88786838503611588565b50505050505050565b6000816040013580610f0161125b565b1115610f4a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610fbd6060840135610f626040860160208701611f49565b6040805180820190915260009080610f7a89806125ef565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261140d565b5060005491508260800135821115610ce05760405162461bcd60e51b815260040161041a90612550565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156104a357600080fd5b60008413806110685750600083135b61107157600080fd5b600061107f828401846122e1565b9050600080600061109384600001516116cf565b9250925092506110c57f0000000000000000000000000000000000000000000000000000000000000000848484611700565b5060008060008a136110ec57846001600160a01b0316846001600160a01b03161089611103565b836001600160a01b0316856001600160a01b0316108a5b9150915081156111225761111d858760200151338461171f565b6104b7565b855161112d906113db565b1561115257855161113d906113f6565b865261114c813360008961140d565b506104b7565b806000819055508394506104b7858760200151338461171f565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111b85780518252601f199092019160209182019101611199565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461121a576040519150601f19603f3d011682016040523d82523d6000602084013e61121f565b606091505b5050905080610638576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b4290565b60006001600160a01b038416611273573093505b600080600061128585600001516116cf565b919450925090506001600160a01b03808316908416106000806112a98686866118af565b6001600160a01b031663128acb088b856112c28f6118ed565b6001600160a01b038e16156112d7578d6112fd565b876112f65773fffd8963efd1fc6a506488495d951d5263988d256112fd565b6401000276a45b8d60405160200161130e91906125a9565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161133d959493929190612497565b6040805180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e91906120da565b915091508261139d578161139f565b805b6000039b9a5050505050505050505050565b60008215806113cc575050818102818382816113c957fe5b04145b6113d557600080fd5b92915050565b8051604211155b919050565b60606113d5826000602b611903565b80516060906113d590839060179060161901611903565b60006001600160a01b038416611421573093505b600080600061143385600001516116cf565b919450925090506001600160a01b03808416908316106000806114578587866118af565b6001600160a01b031663128acb088b856114708f6118ed565b6000036001600160a01b038e1615611488578d6114ae565b876114a75773fffd8963efd1fc6a506488495d951d5263988d256114ae565b6401000276a45b8d6040516020016114bf91906125a9565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114ee959493929190612497565b6040805180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f91906120da565b9150915060008361155457818360000361155a565b82826000035b90985090506001600160a01b038a16611579578b811461157957600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106116045780518252601f1990920191602091820191016115e5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611666576040519150601f19603f3d011682016040523d82523d6000602084013e61166b565b606091505b5091509150818015611699575080511580611699575080806020019051602081101561169657600080fd5b50515b610826576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b600080806116dd8482611a54565b92506116ea846014611b04565b90506116f7846017611a54565b91509193909250565b600061171685611711868686611bab565b611c01565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156117605750804710155b15611882577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117c057600080fd5b505af11580156117d4573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561185057600080fd5b505af1158015611864573d6000803e3d6000fd5b505050506040513d602081101561187a57600080fd5b50610dc49050565b6001600160a01b0383163014156118a35761189e848383611588565b610dc4565b610dc484848484611c24565b60006118e57f00000000000000000000000000000000000000000000000000000000000000006118e0868686611bab565b611d74565b949350505050565b6000600160ff1b82106118ff57600080fd5b5090565b60608182601f01101561194e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b828284011015611996576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b818301845110156119e2576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611a015760405191506000825260208201604052611a4b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611a3a578051835260209283019201611a22565b5050858452601f01601f1916604052505b50949350505050565b600081826014011015611aa3576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611af4576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b600081826003011015611b52576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611ba2576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611bb3611ebb565b826001600160a01b0316846001600160a01b03161115611bd1579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611c0d8383611d74565b9050336001600160a01b038216146113d557600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611ca85780518252601f199092019160209182019101611c89565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d0a576040519150601f19603f3d011682016040523d82523d6000602084013e611d0f565b606091505b5091509150818015611d3d575080511580611d3d5750808060200190516020811015611d3a57600080fd5b50515b610824576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b600081602001516001600160a01b031682600001516001600160a01b031610611d9c57600080fd5b8282600001518360200151846040015160405160200180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060405160208183030381529060405280519060200120846001600160a01b031663554dcae76040518163ffffffff1660e01b815260040160206040518083038186803b158015611e3057600080fd5b505afa158015611e44573d6000803e3d6000fd5b505050506040513d6020811015611e5a57600080fd5b5051604080516001600160f81b031960208083019190915260609590951b6bffffffffffffffffffffffff19166021820152603581019390935260558084019290925280518084039092018252607590920190915280519101209392505050565b604080516060810182526000808252602082018190529181019190915290565b80356113e2816126ad565b600082601f830112611ef6578081fd5b8135611f09611f048261265f565b61263b565b818152846020838601011115611f1d578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610423578081fd5b600060208284031215611f5a578081fd5b8135611f65816126ad565b9392505050565b600080600060608486031215611f80578182fd5b8335611f8b816126ad565b9250602084013591506040840135611fa2816126ad565b809150509250925092565b600080600080600060a08688031215611fc4578081fd5b8535611fcf816126ad565b9450602086013593506040860135611fe6816126ad565b9250606086013591506080860135611ffd816126ad565b809150509295509295909350565b60008060008060008060c08789031215612023578081fd5b863561202e816126ad565b95506020870135945060408701359350606087013560ff81168114612051578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561207d578182fd5b823567ffffffffffffffff80821115612094578384fd5b818501915085601f8301126120a7578384fd5b8135818111156120b5578485fd5b86602080830285010111156120c8578485fd5b60209290920196919550909350505050565b600080604083850312156120ec578182fd5b505080516020909101519092909150565b60008060008060608587031215612112578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115612137578384fd5b818701915087601f83011261214a578384fd5b813581811115612158578485fd5b886020828501011115612169578485fd5b95989497505060200194505050565b600060208284031215612189578081fd5b815167ffffffffffffffff81111561219f578182fd5b8201601f810184136121af578182fd5b80516121bd611f048261265f565b8181528560208385010111156121d1578384fd5b611716826020830160208601612681565b6000602082840312156121f3578081fd5b813567ffffffffffffffff8082111561220a578283fd5b9083019060a0828603121561221d578283fd5b60405160a08101818110838211171561223257fe5b604052823582811115612243578485fd5b61224f87828601611ee6565b82525061225e60208401611edb565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000610100828403121561229f578081fd5b611f658383611f37565b6000602082840312156122ba578081fd5b813567ffffffffffffffff8111156122d0578182fd5b820160a08185031215611f65578182fd5b6000602082840312156122f2578081fd5b813567ffffffffffffffff80821115612309578283fd5b908301906040828603121561231c578283fd5b60405160408101818110838211171561233157fe5b604052823582811115612342578485fd5b61234e87828601611ee6565b82525060208301359250612361836126ad565b6020810192909252509392505050565b600060208284031215612382578081fd5b813562ffffff81168114611f65578182fd5b600080604083850312156123a6578182fd5b8235915060208301356123b8816126ad565b809150509250929050565b600080600080608085870312156123d8578182fd5b8435935060208501356123ea816126ad565b9250604085013591506060850135612401816126ad565b939692955090935050565b60008151808452612424816020860160208601612681565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906124d29083018461240c565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561253057603f1988860301845261251e85835161240c565b94509285019290850190600101612502565b5092979650505050505050565b600060208252611f65602083018461240c565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b6000602082528251604060208401526125c5606084018261240c565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e19843603018112612605578283fd5b83018035915067ffffffffffffffff82111561261f578283fd5b60200191503681900382131561263457600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561265757fe5b604052919050565b600067ffffffffffffffff82111561267357fe5b50601f01601f191660200190565b60005b8381101561269c578181015183820152602001612684565b83811115610dc45750506000910152565b6001600160a01b03811681146126c257600080fd5b5056fea26469706673582212208007e9d114a06a93a52196340090c31fe066fd5ae7de3e24f8fe41196dc4221764736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "exactInput((bytes,address,uint256,uint256,uint256))": {
        "params": {
          "params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
        },
        "returns": {
          "amountOut": "The amount of the received token"
        }
      },
      "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
        "params": {
          "params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
        },
        "returns": {
          "amountOut": "The amount of the received token"
        }
      },
      "exactOutput((bytes,address,uint256,uint256,uint256))": {
        "params": {
          "params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
        },
        "returns": {
          "amountIn": "The amount of the input token"
        }
      },
      "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
        "params": {
          "params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
        },
        "returns": {
          "amountIn": "The amount of the input token"
        }
      },
      "multicall(bytes[])": {
        "details": "The `msg.value` should not be trusted for any method callable from multicall.",
        "params": {
          "data": "The encoded function data for each of the calls to make to this contract"
        },
        "returns": {
          "results": "The results from each of the calls passed in via data"
        }
      },
      "refundETH()": {
        "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
      },
      "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
        "params": {
          "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
          "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
          "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
          "token": "The address of the token spent",
          "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
          "value": "The amount that can be spent of token"
        }
      },
      "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "The `owner` is always msg.sender and the `spender` is always address(this)",
        "params": {
          "expiry": "The timestamp at which the permit is no longer valid",
          "nonce": "The current nonce of the owner",
          "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
          "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
          "token": "The address of the token spent",
          "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
        }
      },
      "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
        "params": {
          "expiry": "The timestamp at which the permit is no longer valid",
          "nonce": "The current nonce of the owner",
          "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
          "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
          "token": "The address of the token spent",
          "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
        }
      },
      "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
        "params": {
          "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
          "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
          "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
          "token": "The address of the token spent",
          "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
          "value": "The amount that can be spent of token"
        }
      },
      "sweepToken(address,uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
        "params": {
          "amountMinimum": "The minimum amount of token required for a transfer",
          "recipient": "The destination address of the token",
          "token": "The contract address of the token which will be transferred to `recipient`"
        }
      },
      "sweepTokenWithFee(address,uint256,address,uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users"
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
        "params": {
          "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
          "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
          "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
        }
      },
      "unwrapWETH9(uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
        "params": {
          "amountMinimum": "The minimum amount of WETH9 to unwrap",
          "recipient": "The address receiving ETH"
        }
      },
      "unwrapWETH9WithFee(uint256,address,uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users."
      }
    },
    "stateVariables": {
      "DEFAULT_AMOUNT_IN_CACHED": {
        "details": "Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap can never actually be this value"
      },
      "amountInCached": {
        "details": "Transient storage variable used for returning the computed amount in for an exact output swap."
      }
    },
    "title": "Uniswap V3 Swap Router",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "exactInput((bytes,address,uint256,uint256,uint256))": {
        "notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
      },
      "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
        "notice": "Swaps `amountIn` of one token for as much as possible of another token"
      },
      "exactOutput((bytes,address,uint256,uint256,uint256))": {
        "notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
      },
      "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
        "notice": "Swaps as little as possible of one token for `amountOut` of another token"
      },
      "multicall(bytes[])": {
        "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
      },
      "refundETH()": {
        "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
      },
      "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Permits this contract to spend a given token from `msg.sender`"
      },
      "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
      },
      "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
      },
      "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Permits this contract to spend a given token from `msg.sender`"
      },
      "sweepToken(address,uint256,address)": {
        "notice": "Transfers the full amount of a token held by this contract to recipient"
      },
      "sweepTokenWithFee(address,uint256,address,uint256,address)": {
        "notice": "Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient"
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
      },
      "unwrapWETH9(uint256,address)": {
        "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
      },
      "unwrapWETH9WithFee(uint256,address,uint256,address)": {
        "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient"
      }
    },
    "notice": "Router for stateless execution of swaps against Uniswap V3",
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1995800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "WETH9()": "infinite",
        "exactInput((bytes,address,uint256,uint256,uint256))": "infinite",
        "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "infinite",
        "exactOutput((bytes,address,uint256,uint256,uint256))": "infinite",
        "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "infinite",
        "factory()": "infinite",
        "multicall(bytes[])": "infinite",
        "refundETH()": "infinite",
        "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "sweepToken(address,uint256,address)": "infinite",
        "sweepTokenWithFee(address,uint256,address,uint256,address)": "infinite",
        "uniswapV3SwapCallback(int256,int256,bytes)": "infinite",
        "unwrapWETH9(uint256,address)": "infinite",
        "unwrapWETH9WithFee(uint256,address,uint256,address)": "infinite"
      },
      "internal": {
        "exactInputInternal(uint256,address,uint160,struct SwapRouter.SwapCallbackData memory)": "infinite",
        "exactOutputInternal(uint256,address,uint160,struct SwapRouter.SwapCallbackData memory)": "infinite",
        "getPool(address,address,uint24)": "infinite"
      }
    },
    "methodIdentifiers": {
      "WETH9()": "4aa4a4fc",
      "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
      "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
      "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
      "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
      "factory()": "c45a0155",
      "multicall(bytes[])": "ac9650d8",
      "refundETH()": "12210e8a",
      "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
      "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
      "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
      "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
      "sweepToken(address,uint256,address)": "df2ab5bb",
      "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
      "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33",
      "unwrapWETH9(uint256,address)": "49404b7c",
      "unwrapWETH9WithFee(uint256,address,uint256,address)": "9b2c0a37"
    }
  }
}