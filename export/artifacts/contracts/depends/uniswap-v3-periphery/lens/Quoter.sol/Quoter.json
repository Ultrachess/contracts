{
  "contractName": "Quoter",
  "sourceName": "contracts/depends/uniswap-v3-periphery/lens/Quoter.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "quoteExactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        }
      ],
      "name": "quoteExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "quoteExactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        }
      ],
      "name": "quoteExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610c13565b610116565b6040516100a29190610e4e565b60405180910390f35b6100956100b9366004610ba5565b61017b565b6100c66102ee565b6040516100a29190610db0565b6100c6610312565b6100956100e9366004610c13565b610336565b6100956100fc366004610ba5565b610384565b61011461010f366004610c79565b6104be565b005b60005b600061012484610595565b905060008060006101348761059d565b92509250925061014882848389600061017b565b9550831561016057610159876105ce565b965061016c565b85945050505050610175565b50505050610119565b92915050565b60006001600160a01b03808616878216109083166101995760008490555b6101a48787876105e5565b6001600160a01b031663128acb0830836101bd88610623565b6000036001600160a01b038816156101d557876101fb565b856101f45773fffd8963efd1fc6a506488495d951d5263988d256101fb565b6401000276a45b8b8b8e60405160200161021093929190610d75565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161023f959493929190610dc4565b6040805180830381600087803b15801561025857600080fd5b505af1925050508015610288575060408051601f3d908101601f1916820190925261028591810190610c56565b60015b6102e1573d8080156102b6576040519150601f19603f3d011682016040523d82523d6000602084013e6102bb565b606091505b506001600160a01b0384166102cf57600080555b6102d881610639565b925050506102e5565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061034484610595565b905060008060006103548761059d565b925092509250610368838383896000610384565b9550831561016057610379876105ce565b965050505050610339565b60006001600160a01b03808616908716106103a08787876105e5565b6001600160a01b031663128acb0830836103b988610623565b6001600160a01b038816156103ce57876103f4565b856103ed5773fffd8963efd1fc6a506488495d951d5263988d256103f4565b6401000276a45b8c8b8d60405160200161040993929190610d75565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610438959493929190610dc4565b6040805180830381600087803b15801561045157600080fd5b505af1925050508015610481575060408051601f3d908101601f1916820190925261047e91810190610c56565b60015b6102e1573d8080156104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b506102d881610639565b60008313806104cd5750600082135b6104d657600080fd5b60008060006104e48461059d565b9250925092506105167f00000000000000000000000000000000000000000000000000000000000000008484846106b6565b50600080600080891361054257856001600160a01b0316856001600160a01b031610888a60000361055d565b846001600160a01b0316866001600160a01b03161089896000035b925092509250821561057457604051818152602081fd5b6000541561058a57600054811461058a57600080fd5b604051828152602081fd5b516042111590565b600080806105ab84826106cc565b92506105b884601461077c565b90506105c58460176106cc565b91509193909250565b805160609061017590839060179060161901610823565b600061061b7f0000000000000000000000000000000000000000000000000000000000000000610616868686610974565b6109ca565b949350505050565b6000600160ff1b821061063557600080fd5b5090565b600081516020146106a25760448251101561066f5760405162461bcd60e51b815260040161066690610e24565b60405180910390fd5b600482019150818060200190518101906106899190610cc7565b60405162461bcd60e51b81526004016106669190610e0a565b818060200190518101906101759190610d31565b60006102e5856106c7868686610974565b610b11565b60008182601401101561071b576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b816014018351101561076c576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b6000818260030110156107ca576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b816003018351101561081a576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b60608182601f01101561086e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b8282840110156108b6576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b81830184511015610902576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015610921576040519150600082526020820160405261096b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561095a578051835260209283019201610942565b5050858452601f01601f1916604052505b50949350505050565b61097c610b34565b826001600160a01b0316846001600160a01b0316111561099a579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b0316106109f257600080fd5b8282600001518360200151846040015160405160200180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060405160208183030381529060405280519060200120846001600160a01b031663554dcae76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d6020811015610ab057600080fd5b5051604080516001600160f81b031960208083019190915260609590951b6bffffffffffffffffffffffff19166021820152603581019390935260558084019290925280518084039092018252607590920190915280519101209392505050565b6000610b1d83836109ca565b9050336001600160a01b0382161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610b64578081fd5b8135610b77610b7282610e7b565b610e57565b818152846020838601011115610b8b578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610bbc578081fd5b8535610bc781610ecd565b94506020860135610bd781610ecd565b9350604086013562ffffff81168114610bee578182fd5b9250606086013591506080860135610c0581610ecd565b809150509295509295909350565b60008060408385031215610c25578182fd5b823567ffffffffffffffff811115610c3b578283fd5b610c4785828601610b54565b95602094909401359450505050565b60008060408385031215610c68578182fd5b505080516020909101519092909150565b600080600060608486031215610c8d578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610cb1578182fd5b610cbd86828701610b54565b9150509250925092565b600060208284031215610cd8578081fd5b815167ffffffffffffffff811115610cee578182fd5b8201601f81018413610cfe578182fd5b8051610d0c610b7282610e7b565b818152856020838501011115610d20578384fd5b6102e5826020830160208601610e9d565b600060208284031215610d42578081fd5b5051919050565b60008151808452610d61816020860160208601610e9d565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a060808201819052600090610dff90830184610d49565b979650505050505050565b600060208252610e1d6020830184610d49565b9392505050565b60208082526010908201526f2ab732bc3832b1ba32b21032b93937b960811b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610e7357fe5b604052919050565b600067ffffffffffffffff821115610e8f57fe5b50601f01601f191660200190565b60005b83811015610eb8578181015183820152602001610ea0565b83811115610ec7576000848401525b50505050565b6001600160a01b0381168114610ee257600080fd5b5056fea2646970667358221220c44f1f11d6f6faa5f30df802cc010b613b07a0d3d78de1609a11eb2b4813382864736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.",
    "kind": "dev",
    "methods": {
      "quoteExactInput(bytes,uint256)": {
        "params": {
          "amountIn": "The amount of the first token to swap",
          "path": "The path of the swap, i.e. each token pair and the pool fee"
        },
        "returns": {
          "amountOut": "The amount of the last token that would be received"
        }
      },
      "quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
        "params": {
          "amountIn": "The desired input amount",
          "fee": "The fee of the token pool to consider for the pair",
          "sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
          "tokenIn": "The token being swapped in",
          "tokenOut": "The token being swapped out"
        },
        "returns": {
          "amountOut": "The amount of `tokenOut` that would be received"
        }
      },
      "quoteExactOutput(bytes,uint256)": {
        "params": {
          "amountOut": "The amount of the last token to receive",
          "path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
        },
        "returns": {
          "amountIn": "The amount of first token required to be paid"
        }
      },
      "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
        "params": {
          "amountOut": "The desired output amount",
          "fee": "The fee of the token pool to consider for the pair",
          "sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
          "tokenIn": "The token being swapped in",
          "tokenOut": "The token being swapped out"
        },
        "returns": {
          "amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
        }
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
        "params": {
          "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
          "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
          "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
        }
      }
    },
    "stateVariables": {
      "amountOutCached": {
        "details": "Transient storage variable used to check a safety condition in exact output swaps."
      }
    },
    "title": "Provides quotes for swaps",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "quoteExactInput(bytes,uint256)": {
        "notice": "Returns the amount out received for a given exact input swap without executing the swap"
      },
      "quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
        "notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
      },
      "quoteExactOutput(bytes,uint256)": {
        "notice": "Returns the amount in required for a given exact output swap without executing the swap"
      },
      "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
        "notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
      }
    },
    "notice": "Allows getting the expected amount out or amount in for a given swap without executing the swap",
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "773400",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "WETH9()": "infinite",
        "factory()": "infinite",
        "quoteExactInput(bytes,uint256)": "infinite",
        "quoteExactInputSingle(address,address,uint24,uint256,uint160)": "infinite",
        "quoteExactOutput(bytes,uint256)": "infinite",
        "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "infinite",
        "uniswapV3SwapCallback(int256,int256,bytes)": "infinite"
      },
      "internal": {
        "getPool(address,address,uint24)": "infinite",
        "parseRevertReason(bytes memory)": "infinite"
      }
    },
    "methodIdentifiers": {
      "WETH9()": "4aa4a4fc",
      "factory()": "c45a0155",
      "quoteExactInput(bytes,uint256)": "cdca1753",
      "quoteExactInputSingle(address,address,uint24,uint256,uint160)": "f7729d43",
      "quoteExactOutput(bytes,uint256)": "2f80bb1d",
      "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "30d07f21",
      "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
    }
  }
}