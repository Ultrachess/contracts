{
  "contractName": "IUniV3Staker",
  "sourceName": "contracts/src/interfaces/token/routes/IUniV3Staker.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "IncentiveCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "stableAmounts",
          "type": "uint256[3]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "NFTStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardClaimed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stableIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stablesReturned",
          "type": "uint256"
        }
      ],
      "name": "NFTUnstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stableIndex",
          "type": "uint256"
        }
      ],
      "name": "exitOneStable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stablesReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "numberOfStakes",
          "type": "uint48"
        },
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIncentive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalRewardUnclaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "totalSecondsClaimedX128",
          "type": "uint160"
        },
        {
          "internalType": "uint96",
          "name": "numberOfStakes",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRewardInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "secondsInsideX128",
          "type": "uint160"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "getRewardsOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardsOwed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "secondsPerLiquidityInsideInitialX128",
          "type": "uint160"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[3]",
          "name": "stableAmounts",
          "type": "uint256[3]"
        },
        {
          "internalType": "uint256",
          "name": "baseTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "stakeNFTImbalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stableIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stableAmount",
          "type": "uint256"
        }
      ],
      "name": "stakeNFTOneStable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "stakeNFTWithBaseToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[3]",
          "name": "stableAmounts",
          "type": "uint256[3]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "stakeNFTWithStables",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stableIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unstakeNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stablesReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Token router to liquidity to the Uniswap V3 pool in exchange for an LP NFT",
    "events": {
      "IncentiveCreated(address,uint256,uint256,uint256,address)": {
        "details": "Emitted when a new incentive is created",
        "params": {
          "creator": "The address of the creator",
          "endTime": "The end time of the incentive",
          "refundee": "The incentive's refundee address",
          "reward": "The reward amount",
          "startTime": "The start time of the incentive"
        }
      },
      "NFTStaked(address,address,address,uint256,uint256[3],uint256)": {
        "details": "Emitted when a Uniswap V3 LP NFT is staked",
        "params": {
          "baseTokenAmount": "The amount of base tokens spent on the NFT",
          "nftAddress": "The address of the NFT manager contract",
          "nftTokenId": "The ID of the NFT",
          "recipient": "The address of the recipient of the LP NFT",
          "sender": "The sender of the underlying stablecoins",
          "stableAmounts": "The amounts of stablecoins spent on the NFT                      (0 = DAI, 1 = USDC, 2 = USDT)"
        }
      },
      "NFTUnstaked(address,address,address,uint256,uint256,uint256,uint256)": {
        "details": "Emitted when a Uniswap V3 LP NFT is unstaked",
        "params": {
          "nftAddress": "The address of the NFT manager contract",
          "nftTokenId": "The ID of the NFT",
          "rewardClaimed": "The amount of the base token claimed as a reward for                      staking the LP NFT",
          "sender": "The sender of the NFT",
          "stableIndex": "The index of the stablecoin to receive                    (0 = DAI, 1 = USDC, 2 = USDT)",
          "stablesReturned": "The amount of stablecoins returned to the recipient"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "exitOneStable(uint256,uint256)": {
        "details": "Collects everything and returns the empty LP NFT in one transaction",
        "params": {
          "nftTokenId": "The ID of the LP NFT",
          "stableIndex": "The index of the stablecoin to receive                    (0 = DAI, 1 = USDC, 2 = USDT)"
        },
        "returns": {
          "stablesReturned": "The total amount of stablecoins returned to the                         recipient"
        }
      },
      "getDeposit(uint256)": {
        "details": "Get information about a deposited LP NFT",
        "returns": {
          "numberOfStakes": "Counter of how many incentives for which the                        liquidity is staked",
          "owner_": "The owner of the deposited LP NFT",
          "tickLower": "The lower tick of the range",
          "tickUpper": "The upper tick of the range"
        }
      },
      "getIncentive()": {
        "details": "Get the staking incentive",
        "returns": {
          "numberOfStakes": "The count of deposits that are currently staked for                        the incentive",
          "totalRewardUnclaimed": "The amount of reward token not yet claimed by                              users",
          "totalSecondsClaimedX128": "Total liquidity-seconds claimed,                                 represented as a UQ32.128"
        }
      },
      "getRewardInfo(uint256)": {
        "details": "Calculates the reward amount that will be received for the given stake",
        "params": {
          "tokenId": "The ID of the token"
        },
        "returns": {
          "reward": "The reward accrued to the NFT for the given incentive thus                far"
        }
      },
      "getRewardsOwed(address)": {
        "details": "Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated",
        "params": {
          "owner_": "The owner for which the rewards owed are checked"
        },
        "returns": {
          "rewardsOwed": "The amount of the reward token claimable by the owner"
        }
      },
      "getStake(uint256)": {
        "details": "Get information about a staked liquidity NFT",
        "params": {
          "tokenId": "The ID of the staked token"
        },
        "returns": {
          "liquidity": "The amount of liquidity in the NFT as of the last time                   the rewards were computed",
          "secondsPerLiquidityInsideInitialX128": "secondsPerLiquidity                                              represented as a UQ32.128"
        }
      },
      "stakeNFTImbalance(uint256[3],uint256,address)": {
        "details": "Mints and stakes a Uniswap V3 LP NFT without performing a one-sided token swap",
        "params": {
          "baseTokenAmount": "The amount of the base token to deposit, or 0 to                        swap half the stable amounts into the base token",
          "recipient": "The recient of the LP NFT",
          "stableAmounts": "The amounts of underlying stablecoins to deposit                      (0 = DAI, 1 = USDC, 2 = USDT)"
        },
        "returns": {
          "nftTokenId": "The ID of the minted LP NFT"
        }
      },
      "stakeNFTOneStable(uint256,uint256)": {
        "details": "Mints and stakes a Uniswap V3 LP NFT using a single stablecoin",
        "params": {
          "stableAmount": "The amount of the stablecoin to use",
          "stableIndex": "The index of the stablecoin to use                    (0 = DAI, 1 = USDC, 2 = USDT)"
        },
        "returns": {
          "nftTokenId": "The ID of the minted LP NFT"
        }
      },
      "stakeNFTWithBaseToken(uint256,address)": {
        "details": "Mints and stakes a Uniswap V3 LP NFT, depositing base tokens",
        "params": {
          "baseTokenAmount": "The amount of the base token to deposit, or 0 to                        swap half the stable amounts into the base token",
          "recipient": "The recient of the LP NFT"
        },
        "returns": {
          "nftTokenId": "The ID of the minted LP NFT"
        }
      },
      "stakeNFTWithStables(uint256[3],address)": {
        "details": "Mints and stakes a Uniswap V3 LP NFT, depositing stablecoins",
        "params": {
          "recipient": "The recient of the LP NFT",
          "stableAmounts": "The amounts of underlying stablecoins to deposit                      (0 = DAI, 1 = USDC, 2 = USDT)"
        },
        "returns": {
          "nftTokenId": "The ID of the minted LP NFT"
        }
      },
      "unstakeNFT(uint256,uint256,address)": {
        "details": "Unstakes an LP NFT and returns the underlying liquidity as a stablecoin Instead of burning the empty NFT, it is transfered to the recipient as a keepsake.",
        "params": {
          "nftTokenId": "The ID of the LP NFT",
          "recipient": "The recipient of the stablecoin",
          "stableIndex": "The index of the stablecoin to receive                    (0 = DAI, 1 = USDC, 2 = USDT)"
        },
        "returns": {
          "stablesReturned": "The total amount of stablecoins returned to the                         recipient"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "exitOneStable(uint256,uint256)": "3f782e08",
      "getDeposit(uint256)": "9f9fb968",
      "getIncentive()": "dde5aa69",
      "getRewardInfo(uint256)": "243d3827",
      "getRewardsOwed(address)": "5cca32b1",
      "getStake(uint256)": "ce325bf8",
      "stakeNFTImbalance(uint256[3],uint256,address)": "276075d2",
      "stakeNFTOneStable(uint256,uint256)": "e453d83c",
      "stakeNFTWithBaseToken(uint256,address)": "fcfd6194",
      "stakeNFTWithStables(uint256[3],address)": "9da94e87",
      "unstakeNFT(uint256,uint256,address)": "648bff26"
    }
  }
}